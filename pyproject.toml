[tool.poetry]
name = "task_13_djangogramm"
version = "0.1.0"
description = "Social tenwork on Django"
authors = ["DmitryTok <moon0939110824@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
django = "4.1.7"
isort = "5.12.0"
mypy = "1.0.0"
mypy-extensions = "1.0.0"
pillow = "9.4.0"
pre-commit = "3.3.2"
psycopg2-binary = "2.9.5"
pycodestyle = "2.10.0"
pyflakes = "3.0.1"
pyyaml = "6.0"
coverage = "7.2.3"
flake8-pyproject = "1.2.3"
django-cloudinary-storage = "0.3.0"
cloudinary = "1.30.0"
poetry = "1.5.0"
django-debug-toolbar = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
exclude = [
    ".env",
    "venv",
    "migrations",
    ".pre-commit-config.yaml",
    "pyproject.toml",
    "Makefile",
    "requirements.txt",
    "Dockerfile",
    "docker-compose.yml",
    ".gitignore",
    "example_env_file",
    ".coveragerc",
    "users/templates",
    "djangogramm_app/templates",
    "djangogramm_app/migrations",
    "users/migrations",
    "multiprocessing"
]
ignore = ["E999"]
max-line-length = 120

[tool.mypy]
exclude = ["djangogramm_app/migrations/*", "venv"]
warn_unused_configs = true
ignore_missing_imports = true

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
