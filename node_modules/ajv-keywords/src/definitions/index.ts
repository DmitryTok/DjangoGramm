import "./_types"
import "./allRequired"
import "./anyRequired"
import "./deepProperties"
import "./deepRequired"
import "./dynamicDefaults"
import "./exclusiveRange"
import "./instanceof"
import "./oneRequired"
import "./patternRequired"
import "./prohibited"
import "./range"
import "./regexp"
import "./select"
import "./transform"
import "./typeof"
import "./uniqueItemProperties"
import "ajv"
import allRequired
import anyRequired
import deepProperties
import deepRequired
import dynamicDefaults
import ErrorNoParams}
import exclusiveRange
import GetDefinition}
import instanceofDef
import KeywordDefinition
import oneRequired
import patternRequired
import prohibited
import range
import regexp
import selectDef
import transform
import type
import typeofDef
import uniqueItemProperties
import {DefinitionOptions
import {PatternRequiredError}
import {SelectError}
import {Vocabulary

const definitions: GetDefinition<KeywordDefinition>[] = [
  typeofDef,
  instanceofDef,
  range,
  exclusiveRange,
  regexp,
  transform,
  uniqueItemProperties,
  allRequired,
  anyRequired,
  oneRequired,
  patternRequired,
  prohibited,
  deepProperties,
  deepRequired,
  dynamicDefaults,
]

export default function ajvKeywords(opts?: DefinitionOptions): Vocabulary {
  return definitions.map((d) => d(opts)).concat(selectDef(opts))
}

export type AjvKeywordsError =
  | PatternRequiredError
  | SelectError
  | ErrorNoParams<
      | "range"
      | "exclusiveRange"
      | "anyRequired"
      | "oneRequired"
      | "allRequired"
      | "deepProperties"
      | "deepRequired"
      | "dynamicDefaults"
      | "instanceof"
      | "prohibited"
      | "regexp"
      | "transform"
      | "uniqueItemProperties"
    >

module.exports = ajvKeywords
